// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PaderbornUniversity.SILab.Hip.FeatureToggle.Clients.Models
{
    using System.Linq;

    public partial class Metadata
    {
        /// <summary>
        /// Initializes a new instance of the Metadata class.
        /// </summary>
        public Metadata() { }

        /// <summary>
        /// Initializes a new instance of the Metadata class.
        /// </summary>
        public Metadata(string title, string details = default(string), string type = default(string), string subType = default(string), string photographer = default(string), string creator = default(string), string material = default(string), int? height = default(int?), int? width = default(int?), int? depth = default(int?), string unit = default(string), string date = default(string), string date2 = default(string), string source = default(string), string copyright = default(string), string location = default(string), string signature = default(string), int? page = default(int?), string pointOfOrigin = default(string), string placeOfManufacture = default(string), string detailedPosition = default(string), System.DateTime? timeStamp = default(System.DateTime?))
        {
            Title = title;
            Details = details;
            Type = type;
            SubType = subType;
            Photographer = photographer;
            Creator = creator;
            Material = material;
            Height = height;
            Width = width;
            Depth = depth;
            Unit = unit;
            Date = date;
            Date2 = date2;
            Source = source;
            Copyright = copyright;
            Location = location;
            Signature = signature;
            Page = page;
            PointOfOrigin = pointOfOrigin;
            PlaceOfManufacture = placeOfManufacture;
            DetailedPosition = detailedPosition;
            TimeStamp = timeStamp;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "details")]
        public string Details { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subType")]
        public string SubType { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "photographer")]
        public string Photographer { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creator")]
        public string Creator { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "material")]
        public string Material { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "height")]
        public int? Height { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "width")]
        public int? Width { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "depth")]
        public int? Depth { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "date")]
        public string Date { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "date2")]
        public string Date2 { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "copyright")]
        public string Copyright { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signature")]
        public string Signature { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "page")]
        public int? Page { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pointOfOrigin")]
        public string PointOfOrigin { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "placeOfManufacture")]
        public string PlaceOfManufacture { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "detailedPosition")]
        public string DetailedPosition { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeStamp")]
        public System.DateTime? TimeStamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Title");
            }
        }
    }
}
